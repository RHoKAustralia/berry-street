swagger: '2.0'

info:
  version: "1.0.0"
  title: Berry Street - Family Finder

host: rhok.berrystreet.org.au
basePath: /

paths:
  /person:
    post:
      description: |
        Creates a new `Person`
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: body
          in: body
          description: |
            `Person` object to create
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        "405":
          description: Invalid input

    put:
      description: |
        Updates an existing `Person`
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: body
          in: body
          description: |
            `Person` object to update
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        "405":
          description: Invalid input
        "404":
          description: |
            `Person` not found

  /person/${id}:
    get:
      description: |
        Gets `Person` identified with `id`
      produces:
        - application/vnd.api+json
      parameters:
        - name: id
          in: path
          description: ID of person to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Persons'

  /person/${id}/connections:
    get:
      description: |
        Gets `Connections` from `Person` identified with `id`
      produces:
        - application/vnd.api+json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Connections'
    put:
      description: |
        Updates/Creates a `Connection` from `Person` identified with `id`
      produces:
        - application/vnd.api+json
      consumes:
        - application/vnd.api+json
      responses:
        "405":
          description: Invalid input

  /person/search:
    get:
      description: |
        search for `Person`s that match the criteria provided in the parameters
      produces:
        - application/vnd.api+json
      parameters:
        -
          name: givenNames
          in: query
          description: first name
          required: false
          type: string
        -
          name: familyName
          in: query
          description: last name
          required: false
          type: string
        -
          name: dateOfBirth
          in: query
          description: fragment of the name
          required: false
          type: string
          format: date
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Persons'

  /case:
    post:
      description: |
        Creates a `Case`
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: body
          in: body
          required: true
          description: A JSON string containing `Case` details
          schema:
            $ref: '#/definitions/Case'
      responses:
        405:
          description: Invalid input

    put:
      description: |
        Update the `Case`
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: body
          in: body
          required: true
          description: A JSON string containing `Case` details
          schema:
            $ref: '#/definitions/Case'
      responses:
        200:
          description: Successfully updated `Case`
        404:
          description: Could not find `Case`

  /case/search:
    get:
      description: list all `Case`s
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        -
          name: size
          in: query
          description: Maximum number of `Cases` to return
          required: false
          type: integer
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/Cases'

  /case/${id}:
    get:
      description: list all `Case`s
      produces:
        - application/vnd.api+json
      parameters:
        - name: id
          in: path
          description: ID of `Case` to retrieve
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/Cases'

  /case/${id}/person/${personId}:
    post:
      description: |
        Link a `Person` to a `Case`
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      parameters:
        - name: id
          in: path
          description: ID of `Case` to update
          required: true
          type: integer
          format: int64
        - name: personId
          in: path
          description: ID of `Person` that should be linked to the `Case`
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: No change. `Person` already linked to `Case`
        201:
          description: Successfully linked `Person` to `Case`
        404:
          description: Could not find `Person` or `Case`

definitions:
  Persons:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Person'
      links:
        $ref: '#/definitions/Links'
  Person:
    type: object
    properties:
      id:
        type: number
        format: long
      givenNames:
        type: string
      familyName:
        type: string
      dateOfBirth:
        type: string
        format: date
  Connections:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Connection'
      links:
        $ref: '#/definitions/Links'
  Connection:
    type: object
    properties:
      from:
        type: number
        format: long
      to:
        type: number
        format: long
      relationship:
        type: string
      notes:
        type: string
  Cases:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Case'
      links:
        $ref: '#/definitions/Links'
  Case:
    type: object
    properties:
      caseManager:
        type: string
      familyFinderStaffName:
        type: string
      status:
        type: string
      dateOpened:
        type: string
        format: date
      dateClosed:
        type: string
        format: date
      caseObjective:
        type: string
      phaseOfInvolvement:
        type: string
      subjects:
        type: array
        items:
          $ref: '#/definitions/Person'
      links:
        $ref: '#/definitions/Links'
  Links:
    type: object
    properties:
      self:
        type: string
